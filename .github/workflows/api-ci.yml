name: API CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          working-directory: api
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: cd api && bin/brakeman --no-pager

  lint_ruby:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          working-directory: api
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: cd api && bin/rubocop -f github

  test_api:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3
    
      #  redis:
      #    image: redis
      #    ports:
      #      - 6379:6379
      #    options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips sqlite3

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          working-directory: api
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Run tests
        env:
          DB_DATABASE: postgres
          DB_HOST: localhost
          DB_USER: postgres
          DB_PASSWORD: postgres
          RAILS_ENV: test
          WITH_COVERAGE: true
          DISABLE_SPRING: 1
          # REDIS_URL: redis://localhost:6379/0
        run: cd api && bin/rails db:test:prepare test

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
